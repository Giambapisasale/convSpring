<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		">

	<!-- <bean id="rulesDS" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" 
		/> <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/> <property 
		name="username" value="conv"/> <property name="password" value="conv"/> </bean> -->

	<!-- START xml Writer -->
	<bean id="xmlWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" ref="outputResource" />
		<property name="marshaller" ref="headerMarshaller" />
		<property name="rootTagName" value="CBIBkToCstmrStmtReqPhyMsg" />
		<property name="overwriteOutput" value="true" />
	</bean>


	<bean id="headerMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="implicitCollections">
			<util:map id="implicitCollections">
				<entry key="com.trim.schema.CBIDlyStmtReqLogMsg000102" value="stmt" />
				<entry key="com.trim.schema.CBIAccountStatement21" value="ntry" />
			</util:map>

		</property>
		<property name="aliases">
			<util:map id="aliases">
				<entry key="CBIIdyStmtReqLogMsg" value="com.trim.schema.CBIDlyStmtReqLogMsg000102" />
				<entry key="Stmt" value="com.trim.schema.CBIAccountStatement21" />
				<entry key="Ntry" value="com.trim.schema.CBIReportEntry21" />

			</util:map>
		</property>
		<property name="converters">
			<array>
				<ref bean="dateConverter" />
			</array>
		</property>
	</bean>

	<bean id="dateConverter" class="com.trim.jaxb.DateConverter">
		<constructor-arg value="ddMMyy" index="0" />
	</bean>


	<bean id="outputResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="csv/outputs/domain.all._external3.xml" />
	</bean>

	<!-- END xml writer -->

	<!-- START job RH -->
	<job id="readMultiLineJobRH" xmlns="http://www.springframework.org/schema/batch">

		<step id="stepRH">
			<tasklet>
				<chunk reader="multiLineReader" writer="xmlWriter" processor="RHProcessor"
					commit-interval="1" />
			</tasklet>
		</step>

	</job>

	<bean id="RHProcessor" class="com.trim.CBI_RH_Processor" />

	<bean id="multiLineReader" class="com.trim.CBI_RH_MultiLineItemReader">
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="resource" value="file:csv/inputs/testRH.csv" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="lineTokenizer" ref="RHFileTokenizer" />
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="RHFileTokenizer"
		class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
		<property name="tokenizers">
			<map>
				<entry key=" RH*" value-ref="headerRHTokenizer" />
				<entry key=" EF*" value-ref="footerRHTokenizer" />
				<entry key=" 62*" value-ref="line62Tokenizer" />
				<entry key=" 61*" value-ref="line61Tokenizer" />
				<entry key=" 63*" value-ref="line63Tokenizer" />
				<entry key=" 64*" value-ref="line63Tokenizer" />
				<entry key=" 65*" value-ref="line63Tokenizer" />
			</map>
		</property>
	</bean>

	<bean id="headerRHTokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<property name="names"
			value="type, sender, recipient, creation_date, support_name, filler, stmt_id" />
		<property name="columns" value="2-3, 4-8, 9-13, 14-19, 20-39, 40-120, 2-39" />
	</bean>
	<bean id="footerRHTokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<property name="names" value="type, content" />
		<property name="columns" value="2-3, 4-120" />
	</bean>
	<bean id="line62Tokenizer" class="com.trim.utils.FixedLengthTokenizerAggregator">
		<property name="names"
			value="type, balance_number, number, date, account_date, sign, amount, reason, internal_reason, cheque_number, bank_reference, customer_reference_type, customer_movement_description" />
		<property name="columns"
			value="2-3, 4-10, 11-13, 14-19, 20-25, 26-26, 27-41, 42-43, 44-45, 46-61, 62-77, 78-86, 87-120" />
		<property name="aggregateFields">
			<util:map id="aggregateFields">
				<entry key="reason_internal_reason"
					value="reason, internal_reason" />
			</util:map>
		</property>
	</bean>
	<bean id="line61Tokenizer" class="com.trim.utils.FixedLengthTokenizerAggregator">
		<property name="names"
			value="type, number, filler1, original_abi, reason, description, account_type, cin, abi, cab, account_code, currency_code, accounting_date, sign, opening_balance, country_code, check_digit, filler2" />
		<property name="columns"
			value="2-3, 4-10, 11-23, 24-28, 29-33, 34-49, 50-51, 52-52, 53-57, 58-62, 63-74, 75-77, 78-83, 84-84, 85-99, 100-101, 102-103, 104-120" />
		<property name="aggregateFields">
			<util:map id="aggregateFields">
				<entry key="iban"
					value="country_code, check_digit, cin, abi, cab, account_code" />
			</util:map>
		</property>
	</bean>
	<bean id="line63Tokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<property name="names" value="type, content" />
		<property name="columns" value="2-3, 4-120" />
	</bean>
	<bean id="line64Tokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<property name="names" value="type, content" />
		<property name="columns" value="2-3, 4-120" />
	</bean>
	<bean id="line65Tokenizer"
		class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
		<property name="names" value="type, content" />
		<property name="columns" value="2-3, 4-120" />
	</bean>

</beans>